@using Kendo.Mvc.UI
@using HappyRE.Core.Entities
@model HappyRE.Core.Entities.ViewModel.SaleOrderListViewModel
@{
    ViewBag.Title = "Thông tin chi tiết giao dịch";
}

<style>
    .dl-horizontal img {
        max-height: 130px;
    }

    table thead, table thead th.k-header {
        background-color: #ffc10e !important;
        font-weight: 600 !important;
        color: #333;
    }

    .img-list img {
        margin-right: 5px;
        margin-bottom: 5px;
    }
</style>
<div class="row">
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.PropertyNumber)
            </dt>

            <dd>
                <a target="_blank" href='/property/detail?id=@Model.PropertyId'><strong>@Model.PropertyNumber</strong></a>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.SellBy)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.SellByDisplay) (<span class="link">@Model.SellBy</span>)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PostedBy)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PostedByDisplay)  (<span class="link">@Model.PostedBy</span>)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.OrderDate)
            </dt>
            <dd>
                @(Model.OrderDate?.ToString("dd/MM/yyyy"))
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TotalAmount)
            </dt>

            <dd>
                @Model.TotalAmount.ToString("N0") <span>VNĐ</span>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.RewardPoint)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RewardPointCalc)
            </dd>

        </dl>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-6">
        <fieldset>
            <legend><strong>Chủ nhà</strong></legend>

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.OwnerAvatar)
                </dt>

                <dd>
                    <div class="img-list">
                        @Html.Raw(Model.OwnerImageHtml)
                    </div>
                    @*<img src="@Model.OwnerAvatar" style="width:100px;padding-bottom:10px;" data-magnify="gallery" data-src='@Model.OwnerAvatar.Replace("s200x200","")' />*@
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.OwnerName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.OwnerName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.OwnerPhone)
                </dt>

                <dd>
                    <a href='/customerinfo?id=@Model.OwnerPhone'>@Model.OwnerPhone</a>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.OwnerBirthday)
                </dt>

                <dd>
                    @(Model.OwnerBirthday?.ToString("dd/MM/yyyy"))
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.OwnerIDNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.OwnerIDNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.OwnerAddress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.OwnerAddress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.OwnerTargetId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.OwnerTargetHtml)
                </dd>

            </dl>
        </fieldset>
    </div>
    <div class="col-md-6">
        <fieldset>
            <legend><strong>Khách hàng</strong></legend>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.CustomerAvatar)
                </dt>

                <dd>
                    @*<img src="@Model.CustomerAvatar" style="width:100px;padding-bottom:10px;" data-magnify="gallery" data-src='@Model.CustomerAvatar.Replace("s200x200","")' />*@
                    <div class="img-list">
                        @Html.Raw(Model.CustomerImageHtml)
                    </div>
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.CustomerName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CustomerName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CustomerPhone)
                </dt>
                @if (Model.SellBy == User.Identity.Name || User.IsInRole(Permission.ADMIN))
                {
                    <dd>
                        <a href='/customerinfo?id=@Model.CustomerPhone'>@Model.CustomerPhone</a>
                    </dd>
                }
                else
                {
                    <dd>
                        <span>**********</span>
                    </dd>
                }
                <dt>
                    @Html.DisplayNameFor(model => model.CustomerBirthday)
                </dt>

                <dd>
                    @(Model.CustomerBirthday?.ToString("dd/MM/yyyy"))
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CustomerIDNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CustomerIDNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CustomerAddress)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CustomerAddress)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CustomerTargetId)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CustomerTargetHtml)
                </dd>
            </dl>
        </fieldset>
    </div>
</div>

<input type="hidden" id="canDelete" value="@(User.IsInRole(Permission.COMMENT_DELETE)?1:0)" />
<div>
    @(Html.Kendo().Grid<HappyRE.Core.Entities.Model.HistoryLog>()
          .Name("_list")
          .Columns(columns => columns.Bound(product => product.Contents).Title("Ghi chú").ClientTemplate(@"
                    <div id='rowComment'>
                         <span id='timeInfo'>#=DateChangedFriendly#(#=DateChangedDisplay#) </span><strong style='color:red'>#=CreatedBy#</strong>: #=Contents#
                        <div id='deleteIcon'><a href='javascript:void();'><span onclick='historyLog.onRemove(#=Id#)' class='#= bizHelper.renderCanDo('canDelete')# glyphicon glyphicon-remove'></span></a></div>
                    </div>"))
          .Scrollable(h => h.Height("250px"))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Read(read => read.Action("Search", "HistoryLog", new {tableName = "SaleOrder", tableKeyId = @Model.Id}))
          )
          )
    <br />
    <div class="comment-btn-block">
        @Html.TextArea("commentText", new { @class = "comment-txt", onkeypress = "historyLog.sendCommentEnter('SaleOrder'," + @Model.Id + ")", placeholder = "Nhập nội dung để bình luận, enter hoặc nhấn gởi để lưu.", rows = 3 })
        <button class="k-button k-primary btn-send-comment" onclick="historyLog.sendComment('SaleOrder', @Model.Id)">GỬI</button>
    </div>
</div>

@if (User.IsInRole(Permission.CUSTOMER_MODIFY_HISTORY))
{
    <div style="margin-top:30px;">
        <h4><span class="glyphicon glyphicon-time"></span> Lịch sử thay đổi</h4>
        @(Html.Kendo().Grid<HappyRE.Core.Entities.Model.TrackChange>()
  .Name("_listTrack")
  .Columns(columns =>
  {
      columns.Template(t => { }).ClientTemplate("#= baseListing.renderNumber(data) #").Title("#").Width(20);
      columns.Bound(e => e.UpdatedDate).ClientTemplate("<span>#=kendo.toString(UpdatedDate,'dd/MM/yyyy HH:mm:ss')#</span>").Width(150);
      columns.Bound(e => e.UpdatedBy).Width(160);
      columns.Bound(e => e.ColumnName).Width(180);
      columns.Bound(e => e.Old);
      columns.Bound(e => e.New);
  })
  .Scrollable()
      .Pageable(x => x.PageSizes(new[] { 20, 50 }))
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(20)
          .Model(model => model.Id(p => p.Id))
          .Events(events => events.Error("common.errorHandler"))
                  .Read(read => read.Action("SearchTrack", "HistoryLog").Data("additionalData"))
      )
)
    </div>
}

<div class="foot-link">
    @Html.ActionLink("< Trở lại danh sách", "Index")

    @if (User.IsInRole(Permission.SALEORDER_DELETE))
    {
        <button type='button' class='btn btn-danger' onclick="saleOrderListing.delete(@Model.Id)"><span class='k-icon k-delete'></span> Xóa</button>
    }

    @if (User.IsInRole(Permission.SALEORDER_MODIFY) || Model.PostedBy == User.Identity.Name || Model.CreatedBy == User.Identity.Name)
    {
        @Html.ActionLink("Chỉnh sửa", "Edit", new { id = Model.Id }, new { @class = "btn btn-default" })
    }

</div>

@section Scripts{
    <script>
    function additionalData() {
            return {
                'TableKeyId': @Model.Id,
                'TableId':'SaleOrder'
            }
        }
    </script>
    }

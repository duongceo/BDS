@using Kendo.Mvc.UI
@model HappyRE.Core.Entities.UserProfileQuery

@{
    ViewBag.Title = "Quản lý người dùng";
}
<style>
    .k-widget.k-window {
        top: 25% !important;
    }
</style>
<div class="filter-block">
    @using (Html.BeginForm("Export", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.Kendo().TextBoxFor(x => x.Keyword).HtmlAttributes(new { style = "width:600px", PlaceHolder = "Tên, email, số điện thoại.." })
        @(Html.Kendo().ComboBoxFor(x => x.DepartmentId_Filter).HtmlAttributes(new { style = "width:180px;" })
                              .Filter("contains")
                            .Placeholder("Phòng ban..")
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)
                            .DataSource(source => source.Read(read => read.Action("_Gets", "Department"))))
        @(Html.Kendo().ComboBoxFor(x => x.LevelId_Filter).HtmlAttributes(new { style = "width:180px;" })
                              .Filter("contains")
                            .Placeholder("Chức vụ..")
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)
                            .DataSource(source => source.Read(read => read.Action("_Gets", "Syscode", new { tableId = "UserLevel" }))))
        @(Html.Kendo().ComboBoxFor(x => x.RoleGroupId_Filter).HtmlAttributes(new { style = "width:180px;" })
                              .Filter("contains")
                            .Placeholder("Nhóm quyền..")
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)
                            .DataSource(source => source.Read(read => read.Action("_Gets", "RoleGroup"))))

        @(Html.Kendo().ComboBoxFor(x => x.UserStatus_Filter).HtmlAttributes(new { style = "width:120px;" })
                                    .Placeholder("Trạng thái..")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                      .BindTo(new List<SelectListItem>() {
                  new SelectListItem() {
                      Text = "Hoạt động", Value = "0"
                  },
                  new SelectListItem() {
                      Text = "Ngưng", Value = "1"
                  }
                  }))


        <button id="btnSearch" type="button" class="btn btn-sm btn-primary"><i class="fa fa-search"></i> Tìm kiếm</button>
        <button type="submit" class="btn btn-sm btn-success"><i class="fa fa-file"></i> Export</button>
    }
</div>

@(Html.Kendo().Grid<HappyRE.Core.Entities.ViewModel.UserProfileListViewModel>()
      .Name("_list")
        .ToolBar(tools => tools.Template(@<text>
        <a href="/account/register" class="btn btn-sm btn-primary"><i class="fa fa-plus"></i> Tạo người dùng mới</a>
        </text>))

      .Columns(columns =>
      {
          columns.Bound(e => e.Id).ClientTemplate("<a href='javascript:void(0);' onclick='baseDetailPopup.show(\"User\",#=Id#)'>#=FullName#</a>").Title("Họ tên");
          columns.Bound(e => e.UserName);
          columns.Bound(e => e.Email);
          columns.Bound(e => e.Mobile);
          columns.Bound(e => e.DepartmentName);
          columns.Bound(e => e.LevelName);
          columns.Bound(e => e.RoleGroupName);
          columns.Bound(e => e.UserStatus).ClientTemplate("<i style='color:green'>#= UserStatus==0?'<span class=\"glyphicon glyphicon-check\"></span>' :'<span class=\"glyphicon glyphicon-unchecked\"></span>' #</b>").HtmlAttributes(new { style = "text-align:center" });
          columns.Bound(e => e.Avatar).ClientTemplate("#=bizHelper.renderAvatar(Avatar)#").Title("Hình");
          columns.Bound(e => e.Id).Width(120).Title("").ClientTemplate(@"<a title='Cập nhật thông tin' href='javascript:void(0);' onclick='userListing.show(#=Id#)' class='btn btn-default'><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></a>
                                                                        <button title='Xóa' type='button' onclick='userListing.delete(#=Id#)' class='btn btn-default'><span class='glyphicon glyphicon-remove-circle' aria-hidden='true'></span></button>
                                                                        <button title='Reset mật khẩu' type='button' onclick='userListing.resetPass(#=Id#)' class='btn btn-default'><span class='glyphicon glyphicon-refresh' aria-hidden='true'></span></button>
                                                                        <button title='Chuyển dữ liệu' type='button' onclick='userListing.showUserListModal(#=Id#)' class='btn btn-default'><span class='glyphicon glyphicon-share-alt' aria-hidden='true'></span></button>");
         // columns.Command(command => command.Destroy().Text("Xóa")).Width(80);
      })
      .Pageable(x => x.PageSizes(new[] {20, 50, 100 }))
      .Events(events => events.DataBound("common.onDataBoundHandler"))
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(20)
          .Model(model => model.Id(p => p.Id))
          .Events(events => events.Error("common.errorHandler"))
                  .Read(read => read.Action("Search", "User").Data("additionalData"))
                  //.Destroy("Delete", "User")
      )
)
@(Html.Kendo().Window()
      .Name("_detail")
      .Title("Cập nhật thông tin người dùng")
      .Modal(true)
      .Width(680)
      .HtmlAttributes(new { style="top:25% !important;"})
      //.Height(350)
      .Visible(false)
      .Scrollable(true))
@(Html.Kendo().Window()
      .Name("_userListModal")
      .Title("Chuyển đổi dữ liệu đến nhân viên")
      .Modal(true)
      .Height(520)
      .Width(1024)
      .Visible(false)
      .Scrollable(true))

@section Scripts {
    <script>
        function additionalData() {
            return {
                'LevelId_Filter': $("#LevelId_Filter").val(),
                'RoleGroupId_Filter': $("#RoleGroupId_Filter").val(),
                'DepartmentId_Filter': $("#DepartmentId_Filter").val(),
                'UserStatus_Filter': $("#UserStatus_Filter").val(),
                'Keyword': $("#Keyword").val()
            }
        }

        $(document).ready(function () {
            baseListing.init();
        });

        function renderAvatar(img) {  
            var img_data = '/content/images/src/blank_avatar.jpg';
            if (img == null || img.length == 0) {
                img = img_data;
            }
            else img_data = img.replace('s200x200','');
            return "<img src='"+img+"' style='width:50px;height:50px;' />"
        }
    </script>
}

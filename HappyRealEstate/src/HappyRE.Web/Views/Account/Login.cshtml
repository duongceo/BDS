@model HappyRE.Core.MapModels.FrontEnd.RegisterModel
@using HappyRE.Core.Resources;
@using HappyRE.Core.Utils;
@using MBN.Utils.Extension;
@using res = HappyRE.Core.Resources;
@{
	this.Layout = "~/Views/Shared/_Layout.cshtml";
	var openId = new
	{
		SignUp = Message.Msg_SignUp_With,
		SignIn = Message.Msg_Login_With
	};

	ViewBag.Title = @res.Message.Msg_Register;
}
<div id="register" class="login row login-new" ng-controller="accountController" ng-cloak>
	<div class="panel">
		<div class="f-header noselect">
			<div id="tab-login" class="title" ng-class="{'active': isLogin()}" ng-click="changeStep('login')">@Message.Msg_Login</div>
			<div id="tab-register" class="title" ng-class="{'active': !isLogin()}" ng-click="changeStep('register')">@Message.Msg_Register</div>
		</div>
		<div class="panel-body">
			<div class="col-md-5 col-sm-5 right-content">
				<div ng-show="isLoginOrRegister()" class="form-group">
					@Html.Partial("_ExternalLoginsListPartial", new HappyRE.Core.MapModels.FrontEnd.ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl, OpenId = Model.OpenId, SignUp = true })
				</div>
			</div>
			<div class="col-md-7 col-sm-7 left-content noselect">
				<form ng-show="isLoginOrRegister()" name="myForm" id="myForm" ng-submit="Register.submit()" novalidate>
					<div ng-show="isRegister()">
						<div class="form-group last-name">
							@Html.TextBox("LastName", null, @Html.AngularAttibute("LastName", "Profile", new Dictionary<string, string>() { { "class", "form-control" }, { "placeholder", res.Model.UserProfile_LastName }, { "maxlength", "100" }, { "autocomplete", "off" }, { "autofocus", "" } }))
							@Html.AngularMessage("LastName", "myForm", null, true)
						</div>
						<div class="form-group first-name">
							@Html.TextBox("FirstName", null, @Html.AngularAttibute("FirstName", "Profile", new Dictionary<string, string>() { { "class", "form-control" }, { "placeholder", res.Model.UserProfile_FirstName }, { "maxlength", "50" }, { "autocomplete", "off" } }))
							@Html.AngularMessage("FirstName", "myForm", null, true)
						</div>
					</div>
					<div class="form-group">
						@Html.TextBox("Mobile", null, @Html.AngularAttibute("Mobile", "Profile", new Dictionary<string, string>() { { "class", "form-control" }, { "placeholder", HappyRE.Core.Resources.Model.UserProfile_Mobile }, { "maxlength", "10" }, { "autocomplete", "off" }, { "autofocus", "" }, { "ng-blur", "Register.validateMobile()" } }))
						@Html.AngularMessage("Mobile", "myForm", null, true)
						<input type="hidden" id="validmobile" name="validmobile" value="1" />
					</div>
					<div class="form-group password">
						<svg ng-show="!Register.eye" ng-click="Register.togglePass()" class="mi mi-eye"><use xlink:href="@Common.CDNIconUrl#mi-eye-slash"></use></svg>
						<svg ng-show="Register.eye" ng-click="Register.togglePass()" class="mi mi-eye"><use xlink:href="@Common.CDNIconUrl#mi-eye"></use></svg>
						@Html.TextBox("Password", null, @Html.AngularAttibute("Password", "Profile", new Dictionary<string, string>() { { "class", "form-control" }, { "type", "password" }, { "placeholder", HappyRE.Core.Resources.Model.UserProfile_Password }, { "maxlength", "50" }, { "autocomplete", "off" } }))
						@Html.AngularMessage("Password", "myForm", null, true)
					</div>
					<div ng-show="isRegister()">
						<div class="form-group">
							<button id="sign-up" class="btn btn-primary" gtm-event="all" gtm-cat="signup" gtm-act="step1" type="submit">
								@Message.Msg_Continue<i class="fa fa-angle-right"></i>
							</button>
						</div>
						<div ng-show="Profile.UserType ==0" class="form-group">
							<span><a target="_blank" href="/quy-che/quy-dinh-chung">@Message.Register_Confirm_Pre @Message.Register_Confirm</a></span>
						</div>
						<div class="form-group">
							<span>@Message.Login_Request <a class="btn-link" ng-click="changeStep('login')">@Message.Msg_Login</a></span>
						</div>
					</div>
					<div ng-show="isLogin()">
						<div class="form-group">
							<button id="sign-in" type="submit" class="btn btn-primary">@Message.Msg_Login<i class="fa fa-angle-right"></i></button>
							<a href="@Url.Action("ForgotPassword", "Account")" class="forget-pass" style="margin-left:10px;padding-left:0">@Message.Msg_ForgetPassword?</a>
						</div>
						<div class="form-group">
							<span>@Message.Register_Request <a class="btn-link" ng-click="changeStep('register')">@Message.Msg_Register</a></span>
						</div>
					</div>
				</form>
				<form ng-show="isOTP()" name="otpForm" ng-submit="Register.verifyMobile('otpForm')" novalidate>
					<div>
						<div class="form-group">
							<div ng-bind-html="OtpMsg"></div>
						</div>
						<div class="form-group">
							@Html.TextBox("Code", null, @Html.AngularAttibute("Code", "Profile", new Dictionary<string, string>() { { "maxlength", "6" }, { "class", "form-control" }, { "placeholder", HappyRE.Core.Resources.Model.ConfirmMobile_VerifiedCode }, { "autocomplete", "off" }, { "autofocus", "" } }))
							@Html.AngularMessage("Code", "otpForm", new Dictionary<string, string>() { })
						</div>
						<div class="form-group">
							<button id="verified-otp" gtm-event="all" gtm-cat="signup" gtm-act="step2" type="submit" class="btn btn-primary">
								@Message.Msg_Continue<i class="fa fa-angle-right"></i>
							</button>
						</div>
					</div>
					@{Html.RenderPartial("~/Views/Shared/Partials/_Captcha.cshtml", new Dictionary<string, string>() { { "buttonId", "verified-otp" } });}
				</form>
			</div>
		</div>
	</div>
</div>
@section styles {
	<link rel="preload" href="@HappyRE.Core.Utils.Common.CDNUrl@Styles.Url("~/content/account.css")" as="style" onload="this.onload=null;this.rel='stylesheet'">
}
@section scripts{
	<script type="text/javascript">
		var angular_modules = ['ngMessages', 'ngAnimate', 'ngSanitize', 'ui.bootstrap', 'blockUI'];
		var pageData = { "step": "@Model.Step", "Mobile": "@Model.Mobile", "ReturnUrl": "@Html.Raw(Model.ReturnUrl)", "openId": @Html.Raw(openId.ToJson()) };
	</script>
	@*@Scripts.Render("~/content/account.js")*@
	<script async src='@HappyRE.Core.Utils.Common.CDNUrl@Scripts.Url("~/content/account.js")' type="text/javascript"></script>
	@*<script async defer src="https://sdk.accountkit.com/@(Model.ACK.Locale)/sdk.js"></script>*@
}